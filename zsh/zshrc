# check times to load zsh
# zmodload zsh/zprof

# Path to my helper programs
export PATH=$HOME/dotfiles/helpers:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Path to Homebrew sbin
# Homebrew intel mac
# export PATH="/usr/local/sbin:$PATH"
# Homebrew apple silicon
export PATH=/opt/homebrew/bin:$PATH
export PATH=/opt/homebrew/sbin:$PATH

# Add Python 3.9 path for nvim
export PATH="/Users/mark/Library/Python/3.9/bin:$PATH"

# Adding rbenv to path
export PATH="$HOME/.rbenv/bin:$PATH"
export PATH="$HOME/.rbenv/shims:$PATH"

# Add openssl3 to be used by system
export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"

# Important to use vi mode and spaceship needs to come before source omz
# export RPS1="%{$reset_color%}"

# Make sure UTF-8 is used throughout
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

source $ZSH/oh-my-zsh.sh

# Third Party set up
# Homebrew set up
# Home Shell complition
if type brew &>/dev/null; then
  # FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
  # The above path expands the brew path - below is to speed up ohmyzsh
  FPATH=/usr/local/share/zsh/site-functions:$FPATH
fi
# Link to Homebrew OpenSSL to upgrade automatically
# export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
# The above path expands the brew path - below is to speed up ohmyzsh - old
# version for intel macs
# export RUBY_CONFIGURE_OPTS="--with-openssl-dir=/usr/local/opt/openssl@1.1"
# new version for m1 macs
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=/opt/homebrew/opt/openssl@1.1"

# FZF set up
# export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(vim - {})+abort,ctrl-y:execute-silent(echo {} | pbcopy)+abort,ctrl-w:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up' --layout=reverse --extended --height 60%  --multi --preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200' "
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(vim - {})+abort,ctrl-y:execute-silent(echo {} | pbcopy)+abort,ctrl-w:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up' --layout=reverse --extended --height 60%  --multi"
# Use ripgrep as default search tool
export FZF_DEFAULT_COMMAND='rg --no-ignore-vcs --files --hidden --follow --glob "!.git/*"'
# Using highlight (http://www.andre-simon.de/doku/highlight/en/highlight.html)
export FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}


# Bind up and down to search substring history
bindkey '^[0A' history-substring-search-up
bindkey '^[0B' history-substring-search-down

# ZPlug set up
export ZPLUG_HOME=$(brew --prefix)/opt/zplug
# Loads zplug
source $ZPLUG_HOME/init.zsh

###########################################################
# Packages

zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
# zplug "softmoth/zsh-vim-mode", from:github, defer:2
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "plugins/git",   from:oh-my-zsh
zplug "plugins/fzf",   from:oh-my-zsh
zplug "plugins/colored-man-pages",   from:oh-my-zsh
# zplug "plugins/vi-mode",   from:oh-my-zsh
zplug "mroth/evalcache"
###########################################################
# Theme

# zplug "agnoster/agnoster-zsh-theme", as:theme
zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme

###########################################################
# Install packages that have not been installed yet
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    else
        echo
    fi
fi

zplug load


# Initialize rbenv alone and with evalcache
# eval "$(rbenv init -)"
eval "$(rbenv init - zsh)"
#old initilization
# _evalcache rbenv init -

# Install old Ruby Versions through RBENV
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
export LDFLAGS="-L/opt/homebrew/opt/readline/lib"
export CPPFLAGS="-I/opt/homebrew/opt/readline/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/readline/lib/pkgconfig"
export optflags="-Wno-error=implicit-function-declaration"
export LDFLAGS="-L/opt/homebrew/opt/libffi/lib"
export CPPFLAGS="-I/opt/homebrew/opt/libffi/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/libffi/lib/pkgconfig"

# Initialize vi mode in zsh
# eval spaceship_vi_mode_enable

# Functions
# time the shell loading time
# timezsh() {
#   shell=${1-$SHELL}
#   for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
# }

cdl () {
  builtin cd "$@"
  ls -alh
}

mcd () {
  mkdir -p "$1"
  cd "$1"
}

# script to check if tmux is running and if not to start tmux
 _not_inside_tmux() { [[ -z "$TMUX" ]] }

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}

# ensure_tmux_is_running

# Alias
alias zshconfig="vim ~/.zshrc"
alias omzconfig="vim ~/.oh-my-zsh"
alias tmuxconfig="vim ~/.tmux.conf"
alias vimconfig="vim ~/.vim/vimrc"
alias nvimconfig="nvim ~/.config/nvim/init.vim"
alias helpers="cdl ~/dotfiles/helpers"
alias launchschool="cdl ~/Dropbox/50-59\ Education/51_Launch_School/"
alias inbox="cdl ~/Dropbox/Inbox"
alias upgrade_all="brew update && brew upgrade; brew cu --no-quarantine -y --cleanup; omz update; zplug update"
alias sz="exec zsh"
alias db="cdl ~/Dropbox"
alias dotf="cdl ~/dotfiles"

# From fzf installation should actually be in the last place
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

